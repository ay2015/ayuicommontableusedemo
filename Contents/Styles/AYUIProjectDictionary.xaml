<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:control="http://www.ayjs.net/controls"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                    xmlns:ayi="http://www.ayjs.net/behavior"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">



    <!--二级菜单 S-->
    <Color x:Key="hoverBackground">#FFD9DEE4</Color>
    <Color x:Key="leaveBackground">#00D9DEE4</Color>
    <Color x:Key="selectedBackground">#FFCBD1D7</Color>
    <Color x:Key="selectedLeaveBackground">#00CBD1D7</Color>
    <!--二级菜单 E-->
    <Style x:Key="subThisAyTreeView" TargetType="{x:Type control:AyTreeView}">
        <Style.Resources>
            <control:IndentConverter
        x:Key="thisIndentConverter"
        Indent="12"
        MarginLeft="0" />
            <Style x:Key="AyTreeViewItemSimplyStyle" TargetType="{x:Type TreeViewItem}">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="Story.AyTreeViewItem.Mouseover">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="BorderHoverDiv" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                        <EasingColorKeyFrame KeyTime="0:0:0.1" Value="{StaticResource hoverBackground}">
                                            <EasingColorKeyFrame.EasingFunction>
                                                <CircleEase EasingMode="EaseOut" />
                                            </EasingColorKeyFrame.EasingFunction>
                                        </EasingColorKeyFrame>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="Story.AyTreeViewItem.MouseLeave">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="BorderHoverDiv" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                        <EasingColorKeyFrame KeyTime="0:0:0.3" Value="{StaticResource leaveBackground}">
                                            <EasingColorKeyFrame.EasingFunction>
                                                <CircleEase EasingMode="EaseIn" />
                                            </EasingColorKeyFrame.EasingFunction>
                                        </EasingColorKeyFrame>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="Story.AyTreeViewItem.MouseLeave2">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                        <EasingColorKeyFrame KeyTime="0:0:0.3" Value="{StaticResource selectedLeaveBackground}">
                                            <EasingColorKeyFrame.EasingFunction>
                                                <CircleEase EasingMode="EaseOut" />
                                            </EasingColorKeyFrame.EasingFunction>
                                        </EasingColorKeyFrame>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="Story.AyTreeViewItem.Selected">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                        <EasingColorKeyFrame KeyTime="0" Value="{StaticResource hoverBackground}" />
                                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="{StaticResource selectedBackground}" />
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <StackPanel HorizontalAlignment="Stretch" >
                                <Grid>
                                    <Border
                                        x:Name="BorderHoverDiv"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        SnapsToDevicePixels="True" 
                                        Visibility="Collapsed">
                                        <Border.Background>
                                            <SolidColorBrush Color="{StaticResource leaveBackground}"/>
                                        </Border.Background>
                                    </Border>
                                    <Border
                                        x:Name="Border" 
                                        SnapsToDevicePixels="True">
                                        <Border.Background>
                                            <SolidColorBrush Color="{StaticResource leaveBackground}"/>
                                        </Border.Background>
                                        <Grid x:Name="tviLayout">
                                            <ToggleButton VerticalAlignment="Stretch" Width="auto" Height="auto"
                                                    SnapsToDevicePixels="true"    HorizontalAlignment="Stretch"  x:Name="headerToggleButton" Visibility="Collapsed" IsChecked="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}, Path=IsExpanded}">
                                                <ToggleButton.Template>
                                                    <ControlTemplate  TargetType="{x:Type ToggleButton}">
                                                        <ControlTemplate.Resources>
                                                            <Storyboard x:Key="AyToggleButtonFlatMouseOver">
                                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                                    <EasingColorKeyFrame KeyTime="0:0:0.1" Value="{StaticResource hoverBackground}">
                                                                        <EasingColorKeyFrame.EasingFunction>
                                                                            <CircleEase EasingMode="EaseOut" />
                                                                        </EasingColorKeyFrame.EasingFunction>
                                                                    </EasingColorKeyFrame>
                                                                </ColorAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                            <Storyboard x:Key="AyToggleButtonFlatMouseOut">
                                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="{StaticResource leaveBackground}">
                                                                        <EasingColorKeyFrame.EasingFunction>
                                                                            <CircleEase EasingMode="EaseIn" />
                                                                        </EasingColorKeyFrame.EasingFunction>
                                                                    </EasingColorKeyFrame>
                                                                </ColorAnimationUsingKeyFrames>
                                                            </Storyboard>

                                                        </ControlTemplate.Resources>
                                                        <Grid
                                                            x:Name="grid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                            RenderTransformOrigin="0.5,0.5">
                                                            <Grid.Background>
                                                                <SolidColorBrush Color="{StaticResource leaveBackground}"/>
                                                            </Grid.Background>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="auto" MaxWidth="40" SharedSizeGroup="treei"></ColumnDefinition>
                                                                <ColumnDefinition  Width="*"></ColumnDefinition>
                                                            </Grid.ColumnDefinitions>

                                                            <Border x:Name="Expander" Margin="10,0,0,0"
                                                        Width="16" Cursor="Arrow"
                                                        Height="16"
                                                        Background="#00333333">
                                                                <Viewbox
                                                            Height="9"
                                                            Margin="4,0"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center">
                                                                    <Path
                                                                x:Name="ExpandPath"
                                                                Data="M470,148 L409.5,90.5 409.5,208.5 z"
                                                                Fill="#FF333333"
                                                                Opacity="1"
                                                                RenderTransformOrigin="0.5,0.5"
                                                                Stretch="Fill">
                                                                        <Path.RenderTransform>
                                                                            <TransformGroup>
                                                                                <ScaleTransform />
                                                                                <SkewTransform />
                                                                                <RotateTransform />
                                                                                <TranslateTransform />
                                                                            </TransformGroup>
                                                                        </Path.RenderTransform>
                                                                    </Path>
                                                                </Viewbox>
                                                            </Border>

                                                            <ContentPresenter Grid.Column="1"
                                                                    x:Name="contentPresenter"
                                                                    HorizontalAlignment="Left"
                                                                    VerticalAlignment="Center"
                                                                    RecognizesAccessKey="false"

                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">

                                                            </ContentPresenter>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding HasItems, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}, Mode=FindAncestor}}" Value="false">
                                                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsExpanded}" Value="True">
                                                                <DataTrigger.EnterActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandPath" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="90" />
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </DataTrigger.EnterActions>
                                                                <DataTrigger.ExitActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandPath" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </DataTrigger.ExitActions>
                                                            </DataTrigger>
                                                            <Trigger Property="IsEnabled" Value="false">
                                                                <Setter Property="Opacity" Value="0.75" />
                                                            </Trigger>
                                                            <Trigger Property="IsMouseOver" Value="true">
                                                                <Trigger.ExitActions>
                                                                    <BeginStoryboard x:Name="AyToggleButtonFlatMouseOut_BeginStoryboard" Storyboard="{StaticResource AyToggleButtonFlatMouseOut}" />
                                                                </Trigger.ExitActions>
                                                                <Trigger.EnterActions>
                                                                    <BeginStoryboard Storyboard="{StaticResource AyToggleButtonFlatMouseOver}" />
                                                                </Trigger.EnterActions>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </ToggleButton.Template>
                                                <ContentPresenter
                                                    x:Name="PART_Header2"
                                                    HorizontalAlignment="Stretch" 
                                                    ContentSource="Header"
                                                    VerticalAlignment="Stretch"
                                                    SnapsToDevicePixels="true" />
                                            </ToggleButton>
                                            <ContentPresenter Visibility="Collapsed"
                                                    x:Name="PART_Header"
                                                    HorizontalAlignment="Stretch" 
                                                    ContentSource="Header"
                                                    VerticalAlignment="Stretch"
                                                    SnapsToDevicePixels="true" />
                                        </Grid>

                                    </Border>
                                </Grid>

                                <ItemsPresenter x:Name="ItemsHost" Visibility="Collapsed" />


                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Depth}" Value="0">
                                    <Setter TargetName="headerToggleButton" Property="Visibility" Value="Visible" />
                                    <!--<Setter TargetName="Border" Property="Background" />-->
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Depth}" Value="1">
                                    <Setter TargetName="PART_Header" Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <!--<MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Depth}" Value="0" />
                                        <Condition Binding="{Binding HasItems, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}, Mode=FindAncestor}}" Value="false" />
                                        <Condition Binding="{Binding IsSelected}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource Story.AyTreeViewItem.Selected}" />
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource Story.AyTreeViewItem.MouseLeave2}" />
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>-->
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Depth}" Value="1" />
                                        <Condition Binding="{Binding IsSelected}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource Story.AyTreeViewItem.Selected}" />
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource Story.AyTreeViewItem.MouseLeave2}" />
                                    </MultiDataTrigger.ExitActions>
                                    <Setter TargetName="BorderHoverDiv" Property="Visibility" Value="Collapsed" />

                                </MultiDataTrigger>
                                <DataTrigger Binding="{Binding IsExpanded}" Value="true">
                                    <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <!--<MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding TreeViewAnimationIsOpen, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type control:AyTreeView}}}" Value="true" />
                                        <Condition Binding="{Binding ParentCategory.IsExpanded}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="PART_Header" Property="Margin" Value="{Binding Depth, Converter={StaticResource thisIndentConverter}}" />
                                </MultiDataTrigger>-->
                                <!--<MultiDataTrigger> <MultiDataTrigger.Conditions> <Condition Binding="{Binding TreeViewAnimationIsOpen,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type control:AyTreeView}}}" Value="false"/> <Condition Binding="{Binding IsExpanded}" Value="true"/> </MultiDataTrigger.Conditions> <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible" /> </MultiDataTrigger>-->

                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="BorderHoverDiv" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <!--<Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="BorderHoverDiv" Property="Visibility" Value="Collapsed" />
                                </Trigger>-->
                                <MultiTrigger>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource Story.AyTreeViewItem.Mouseover}" />
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource Story.AyTreeViewItem.MouseLeave}" />
                                    </MultiTrigger.ExitActions>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="False" />
                                        <Condition Property="IsExpanded" Value="False" />
                                    </MultiTrigger.Conditions>
                                </MultiTrigger>
                                <!--<MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected}" Value="true" />
                                        <Condition Binding="{Binding Depth}" Value="0" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsExpanded" Value="true" />
                                </MultiDataTrigger>-->

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.75" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <HierarchicalDataTemplate
                x:Key="TreeNodeTemplate"
                DataType="{x:Type control:AyTreeViewItemModel}"
                ItemsSource="{Binding Children}">
                <Grid x:Name="gridItemRow" Cursor="Arrow"  Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Grid  Height="{Binding TreeViewItemHeight, RelativeSource={RelativeSource AncestorType={x:Type control:AyTreeView}, Mode=FindAncestor}}" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MaxWidth="40"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <control:AyIconAll
                            x:Name="tvIcon"
                            Width="{Binding IconWidth, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type control:AyTreeView}, Mode=FindAncestor}}"
                            Height="{Binding IconHeight, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type control:AyTreeView}, Mode=FindAncestor}}"
                            Margin="0,0,0,0" Visibility="Visible"
                            VerticalAlignment="Center"
                            FontSize="{Binding IconFontSize, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type control:AyTreeView}, Mode=FindAncestor}}"
                            Foreground="{Binding Foreground, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type control:AyTreeView}, Mode=FindAncestor}}"
                            Icon="{Binding Icon, Mode=TwoWay}" />

                        <TextBlock Grid.Column="1"
                        x:Name="textShow"
                        Margin="{Binding Padding, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}, Mode=FindAncestor}}"
                        VerticalAlignment="Center"
                        FontFamily="{Binding FontFamily, RelativeSource={RelativeSource AncestorType={x:Type control:AyTreeView}, Mode=FindAncestor}}"
                        FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType={x:Type control:AyTreeView}, Mode=FindAncestor}}"
                        FontStretch="{Binding FontStretch, RelativeSource={RelativeSource AncestorType={x:Type control:AyTreeView}, Mode=FindAncestor}}"
                        FontWeight="{Binding FontWeight, RelativeSource={RelativeSource AncestorType={x:Type control:AyTreeView}, Mode=FindAncestor}}"
                        Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type control:AyTreeView}, Mode=FindAncestor}}"
                        Text="{Binding Text}" />
                    </Grid>
                </Grid>
                <HierarchicalDataTemplate.Triggers>
                    <DataTrigger Binding="{Binding Depth}" Value="0">
                        <Setter TargetName="tvIcon" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="gridItemRow" Property="Margin" Value="12,0,0,0" />
                    </DataTrigger>

                    <!--<DataTrigger Binding="{Binding TreeViewAnimationIsOpen, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type control:AyTreeView}}}" Value="true">
                        <Setter TargetName="gridItemRow" Property="Margin" Value="{Binding Depth, Converter={StaticResource thisIndentConverter}}" />
                    </DataTrigger>-->

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type control:AyTreeView}}, Path=TreeViewAnimationIsOpen}" Value="true" />
                            <Condition Binding="{Binding Depth}" Value="1" />
                        </MultiDataTrigger.Conditions>
                        <Setter TargetName="gridItemRow" Property="Margin" Value="{Binding Depth, Converter={StaticResource thisIndentConverter}}" />
                    </MultiDataTrigger>

                    <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=HasItems}" Value="true">
                        <Setter TargetName="gridItemRow" Property="Cursor" Value="Hand" />
                    </DataTrigger>-->

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsExpanded}" Value="False" />
                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsMouseOver}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <!--<Setter TargetName="tvIcon" Property="Foreground" Value="{Binding HoverForeground,RelativeSource={RelativeSource AncestorType={x:Type control:AyTreeView},Mode=FindAncestor}}" />-->
                        <Setter TargetName="textShow" Property="Foreground" Value="{Binding HoverForeground, RelativeSource={RelativeSource AncestorType={x:Type control:AyTreeView}, Mode=FindAncestor}}" />

                    </MultiDataTrigger>

                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsSelected}" Value="True">
                        <Setter TargetName="textShow" Property="Foreground" Value="{Binding PressedForeground, RelativeSource={RelativeSource AncestorType={x:Type control:AyTreeView}, Mode=FindAncestor}}" />

                    </DataTrigger>
                </HierarchicalDataTemplate.Triggers>
            </HierarchicalDataTemplate>
        </Style.Resources>
        <Setter Property="ExpandedTime" Value="300" />
        <Setter Property="IsNeedMoveAndOpacity" Value="false" />
        <Setter Property="DepthIndent" Value="12" />
        <Setter Property="OtherBorderTreeViewHeight" Value="0" />
        <Setter Property="HoverForeground" Value="#000000" />
        <Setter Property="Foreground" Value="#000000" />
        <Setter Property="PressedForeground" Value="#000000" />
        <Setter Property="SelectedRightSJXBrush" Value="White" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="ItemTemplate" Value="{StaticResource TreeNodeTemplate}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource AyTreeViewItemSimplyStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeView">
                    <Border
                        Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer Grid.Row="0"
                            CanContentScroll="False"
                            Focusable="False"
                            Style="{DynamicResource AutoHideScrollViewer}">
                            <ItemsPresenter />
                        </ScrollViewer>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>

    
    <Style x:Key="scrollv" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
        <Style.Resources>
            <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Focusable" Value="false" />

                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border x:Name="border" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Padding="{TemplateBinding Padding}" CornerRadius="3" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">

                                    <Setter TargetName="border" Property="Background" Value="#F2F2F2" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="#E5E5E5" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="verrptRepeatButtonTransparent1" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="Transparent" CornerRadius="6,6,0,0" />

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="verrptRepeatButtonTransparent2" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="Transparent" CornerRadius="0,0,6,6" />

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="verrptRepeatButtonTransparent3" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="Transparent" CornerRadius="6,0,0,6" />

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="verrptRepeatButtonTransparent4" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="Transparent" CornerRadius="0,6,6,0" />

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ctvtScrollBarThumbVertical" TargetType="{x:Type Thumb}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Background" Value="#CCCCCC" />

                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid>
                                <Border x:Name="rectangle" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" CornerRadius="4" Opacity="1" SnapsToDevicePixels="True" />
                                <!--<VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.5" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>-->
                            </Grid>
                            <ControlTemplate.Triggers>

                                <!--<DataTrigger Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType={x:Type ScrollBar},Mode=FindAncestor}}" Value="true">
                                    <Setter Property="Background" Value="#898989" />
                                </DataTrigger>-->

                                <!--<Trigger Property="IsDragging" Value="true">
                                    <Setter Property="Background" Value="#A0A0A0" />
                                </Trigger>-->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="AyQQIMScrollViewer.ScrollBar" TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Width" Value="14" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" Margin="1,0" SnapsToDevicePixels="true">
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="14" />
                                    <RowDefinition Height="0.00001*" />
                                    <RowDefinition MaxHeight="14" />
                                </Grid.RowDefinitions>
                                <Border x:Name="guidao" Grid.RowSpan="3" Margin="1,12" Background="#E5E5E5" CornerRadius="4" Opacity="0" />
                                <RepeatButton x:Name="PART_LineUpButton" Margin="0,1" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Opacity="1" Style="{StaticResource ScrollBarButton}">

                                    <Path x:Name="ArrowTop" Data="M4,0 5,0 9,4 0,4z" Width="12" Height=" 6" Fill="#919191" Stretch="Uniform">
                                    </Path>

                                </RepeatButton>
                                <Track IsHitTestVisible="False" x:Name="PART_Track" Grid.Row="1" Margin="1,1" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource verrptRepeatButtonTransparent1}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource verrptRepeatButtonTransparent2}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="chilun" Style="{StaticResource ctvtScrollBarThumbVertical}" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton x:Name="PART_LineDownButton" Grid.Row="2" Margin="0,1" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Opacity="1" Style="{StaticResource ScrollBarButton}">
                                    <Path x:Name="ArrowBottom" Data="M4,4 5,4 9,0 0,0z" Width="12" Height="6" Fill="#919191" Stretch="Uniform" />
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowBottom" Property="Fill" Value="#898989" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowTop" Property="Fill" Value="#898989" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowBottom" Property="Fill" Value="#919191" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowTop" Property="Fill" Value="#919191" />
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" Value="0.5" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Width" Value="Auto" />
                        <Setter Property="MinWidth" Value="0" />
                        <Setter Property="Height" Value="14" />
                        <Setter Property="MinHeight" Value="0" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MaxWidth="14" />
                                            <ColumnDefinition Width="0.00001*" />
                                            <ColumnDefinition MaxWidth="14" />
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="guidao" Grid.ColumnSpan="3" Margin="0,12" Background="#E5E5E5" CornerRadius="4" Opacity="0.7" />
                                        <RepeatButton x:Name="PART_LineLeftButton" Margin="1,0" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Opacity="1" Style="{StaticResource ScrollBarButton}">
                                            <Path x:Name="ArrowLeft" Data="M0,4 0,5 4,0 9,0z" Width="6" Height="12" Fill="#919191" RenderTransformOrigin="0.5,0.5" Stretch="Uniform">

                                            </Path>
                                        </RepeatButton>
                                        <Track IsHitTestVisible="False" x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource verrptRepeatButtonTransparent3}" />
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource verrptRepeatButtonTransparent4}" />
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb Style="{StaticResource ctvtScrollBarThumbVertical}" />
                                            </Track.Thumb>
                                        </Track>
                                        <RepeatButton x:Name="PART_LineRightButton" Grid.Column="2" Margin="1,0" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Opacity="1" Style="{StaticResource ScrollBarButton}">
                                            <Path x:Name="ArrowRight" Data="M0,0  4,4 4,5 0,9z" Width="6" Height="12" Fill="#919191" Stretch="Uniform" />
                                        </RepeatButton>
                                  
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true" />
                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="ArrowRight" Property="Fill" Value="#898989" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true" />
                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="ArrowLeft" Property="Fill" Value="#898989" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true" />
                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="ArrowRight" Property="Fill" Value="#919191" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true" />
                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="ArrowLeft" Property="Fill" Value="#919191" />
                                        </MultiDataTrigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Opacity" Value="0.5" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <ControlTemplate x:Key="AyQQIM.Main.FriendList.ScrollViewer" TargetType="{x:Type ScrollViewer}">
                <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="0" Grid.Column="0" Margin="{TemplateBinding Padding}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                    <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Row="0" Grid.Column="1" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Style="{DynamicResource AyQQIMScrollViewer.ScrollBar}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Row="1" Grid.Column="0" Style="{DynamicResource AyQQIMScrollViewer.ScrollBar}" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                </Grid>
            </ControlTemplate>

        </Style.Resources>
        <Setter Property="Template" Value="{DynamicResource AyQQIM.Main.FriendList.ScrollViewer}">
        </Setter>
    </Style>
</ResourceDictionary>